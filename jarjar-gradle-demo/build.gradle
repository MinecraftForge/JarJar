plugins {
    id 'java'
    id 'eclipse'
    id 'net.minecraftforge.jarjar'
}

repositories {
    mavenCentral()
}

// Creates the jarJar configuration. Use that.
jarJar.register()

dependencies {
    implementation(jarJar('org.apache.maven:maven-artifact:3.9.11')) {
        transitive = false
        // this configures jarjar metadata.
        jarJar.configure(it) {
            version = '3.9.10'
        }
    }

    jarJar(project(':jarjar-example-dep')) {
        jarJar.configure(it) {
            module {
                group = 'me.jonathing'
                name = 'example'
            }
            version = '1'
        }
    }
    compileOnly project(':jarjar-example-nested-outer') // Force the sub-project to build when I run build, just convenience
    compileOnly project(':jarjar-example-mod-outer') // Force the sub-project to build when I run build, just convenience
}

subprojects {
    afterEvaluate { child ->
        // Make all sub-projects put their jars in the root project folder, easier to locate
        tasks.withType(Jar) {
            destinationDirectory = rootProject.layout.buildDir.dir('libs')
        }
        if (tasks.findByName('jarJar')) {
            rootProject.tasks.named('jarJar').configure {
                dependsOn(child.tasks.named('jarJar'))
            }
        }
        // Allow for bulk cleaning
        tasks.named('clean').configure {
            dependsOn(tasks.named('cleanEclipse'))
        }
        parent.tasks.named('clean') {
            dependsOn(child.tasks.named('clean'))
        }
    }
}