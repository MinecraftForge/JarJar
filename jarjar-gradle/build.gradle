import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin
import org.gradle.api.attributes.plugin.GradlePluginApiVersion

plugins {
    id 'java-gradle-plugin'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    id 'io.freefair.javadoc-links'
    id 'net.minecraftforge.gradleutils'
    alias libs.plugins.gitversion
    alias libs.plugins.changelog
    alias libs.plugins.licenser
    alias libs.plugins.plugin.publish
    alias libs.plugins.shadow
}

base.archivesName = 'jarjar-gradle'
gradleutils.displayName = 'Forge Jar-in-Jar Gradle'
description = "Enables buildscripts to embed dependencies using Forge's Jar-in-Jar specification with minimal hassle."
group = 'net.minecraftforge'
version = gitversion.tagOffset

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
    withJavadocJar()
}

gradleutils.pluginDevDefaults(configurations, libs.versions.gradle)

dependencies {
    // Static Analysis
    compileOnly libs.nulls

    // Gradle API
    compileOnly libs.gradle

    // GradleUtils Shared Base
    implementation libs.gradleutils.shared

    // JarJar
    compileOnly libs.jarjar.metadata
}

license {
    header = rootProject.file('../LICENSE-header.txt')
    newLine = false
    exclude '**/*.properties'
}

tasks.named('jar', Jar) {
    archiveClassifier = 'thin'
}

tasks.named('shadowJar', ShadowJar) {
    enableAutoRelocation = true
    archiveClassifier = null
    relocationPrefix = 'net.minecraftforge.jarjar.gradle.shadow'
}

tasks.withType(Javadoc).configureEach {
    javadocTool = javaToolchains.javadocToolFor { languageVersion = JavaLanguageVersion.of(24) }
}

changelog {
    fromBase()
}

gradlePlugin {
    website = gitversion.url
    vcsUrl = gitversion.url + '.git'

    plugins.register('jarjar') {
        id = 'net.minecraftforge.jarjar'
        implementationClass = 'net.minecraftforge.jarjar.gradle.JarJarPlugin'
        displayName = 'Forge Jar-in-Jar' // same as the display name without the "Gradle" part
        description = project.description
        tags = ['minecraftforge']
    }
}

publishing {
    repositories {
        maven gradleutils.getPublishingForgeMaven(rootProject.file('../repo'))
    }

    publications.register('pluginMaven', MavenPublication) {
        artifactId = base.archivesName.get()

        changelog.publish(it)
        gradleutils.promote(it)

        pom { pom ->
            name = gradleutils.displayName
            description = project.description

            gradleutils.pom.addRemoteDetails(pom)

            licenses {
                license gradleutils.pom.licenses.LGPLv2_1
            }

            developers {
                developer gradleutils.pom.developers.Jonathing
            }
        }
    }
}
